// Function to prompt user for password options
function getPasswordOptions() {
  // Variable to store length of password from user input (using prompt)
  

  // Conditional statement to check if password length is a number. Prompts end if this evaluates false
  // show alert if the length variable from above isn't a number

  // Conditional statement to check if password length is at least 8 characters long. Prompts end if this evaluates false
  // show alert if the length variable from above is less than 8

  // Conditional statement to check if password length is less than 128 characters long. Prompts end if this evaluates false
  // show alert if the length variable from above is greater than 128

  // Variable to store boolean regarding the inclusion of SPECIAL characters
  var hasSpecialCharacters = confirm(
    'Click OK to confirm including special characters.'
  );

  // Variable to store boolean regarding the inclusion of NUMERIC characters
  // using pattern from above

  // Variable to store boolean regarding the inclusion of LOWERCASE characters
  // using pattern from above

  // Variable to store boolean regarding the inclusion of UPPERCASE characters
  // using pattern from above

  // Conditional statement to check if user does not include any types of characters. Password generator ends if all four variables evaluate to false
  // show alert that tells them they need to have at least one type of character

  // Object to store user input
  var passwordOptions = {
    // your variable for length,
    length: length,
    hasSpecialCharacters: hasSpecialCharacters // this will be true or false
    // same pattern for each type of character
  };

  return passwordOptions;
}

// Function to generate password with user input
function generatePassword() {
  var options = getPasswordOptions();
  // Variable to store password as it's being concatenated
  var result = [];

  // Array to store types of characters to include in password
  var possibleCharacters = [];

  // Array to contain one of each type of chosen character to ensure each will be used
  var guaranteedCharacters = [];

  // Conditional statement that adds array of special characters into array of possible characters based on user input
  // Push new random special character to guaranteedCharacters
  if (options.hasSpecialCharacters) {
    // add specialCharacters to the possibleCharacters array
    // add a random character from specialCharacters to the guaranteedCharacters array
  }

  // following the pattern from above, do the same thing for NUMERIC characters

  // following the pattern from above, do the same thing for LOWERCASE characters

  // following the pattern from above, do the same thing for UPPERCASE characters

  
  // loop over the options.length, for each iteration - get a random index from the possibleCharacters array and add it to the result variable

  // loop over guaranteedCharacters, set result[i] = guaranteedCharacters[i] - in order to include at least one of each guaranteed character

  // change the result into a string
  // return that string
}

// Get references to the #generate element
var generateBtn = document.querySelector('#generate');

// Write password to the #password input
function writePassword() {
  var password = generatePassword();
  var passwordText = document.querySelector('#password');

  passwordText.value = password;
}

// Add event listener to generate button
generateBtn.addEventListener('click', writePassword);